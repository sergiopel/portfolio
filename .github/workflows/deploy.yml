name: Deploy to Hostinger

on:
  push:
    branches: [ master ] # ou master, dependendo da sua branch principal

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portifolio-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/portifolio-app:latest
          cache-to: type=inline

      - name: Generate .env file
        run: |
          echo "APP_NAME=Portfolio" > .env.production
          echo "APP_ENV=production" >> .env.production
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env.production
          echo "APP_DEBUG=false" >> .env.production
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "DB_CONNECTION=mysql" >> .env.production
          echo "DB_HOST=db" >> .env.production
          echo "DB_PORT=3306" >> .env.production
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env.production
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production

      - name: Copy files to Hostinger via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          password: ${{ secrets.HOSTINGER_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.prod.yml,.env.production,docker/nginx/conf.d/,docker/nginx/ssl/"
          target: "/home/${{ secrets.HOSTINGER_USERNAME }}/portifolio"
          
      - name: Deploy to Hostinger
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          password: ${{ secrets.HOSTINGER_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/${{ secrets.HOSTINGER_USERNAME }}/portifolio
            cp .env.production .env
            
            # Parar e remover containers anteriores
            docker compose -f docker-compose.prod.yml down
            
            # Remover imagens antigas (opcional)
            docker image prune -af
            
            # Baixar a imagem atualizada
            docker pull ${{ secrets.DOCKER_USERNAME }}/portifolio-app:latest
            
            # Iniciar os containers com a nova configuração
            docker compose -f docker-compose.prod.yml up -d
            
            # Executar migrações e otimizações
            docker compose -f docker-compose.prod.yml exec -T app php artisan migrate --force
            docker compose -f docker-compose.prod.yml exec -T app php artisan storage:link
            
            echo "Deployment completed successfully!"